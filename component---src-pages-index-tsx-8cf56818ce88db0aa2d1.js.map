{"version":3,"file":"component---src-pages-index-tsx-8cf56818ce88db0aa2d1.js","mappings":"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","sources":["webpack://blog-example/./src/components/BriefHeader/style.ts","webpack://blog-example/./src/components/BriefHeader/index.tsx","webpack://blog-example/./src/components/SvgIcon/index.tsx","webpack://blog-example/./src/components/Heading/style.ts","webpack://blog-example/./src/components/Heading/index.tsx","webpack://blog-example/./src/pages/styles/_index.style.ts","webpack://blog-example/./src/pages/index.tsx","webpack://blog-example/./src/utils/helpers.ts"],"sourcesContent":["import { createStyles } from 'antd-style'\n\nexport const useStyles = createStyles(({ css, stylish, cx, responsive: r, token, prefixCls }) => ({\n  briefHeader: cx(\n    `${prefixCls}-briefHeader`,\n    css`\n      position: relative;\n      width: 100%;\n      padding-block: 4rem 3rem;\n\n      ${r({\n        mobile: css`\n          padding-block: 3rem 2.5rem;\n        `,\n      })}\n    `\n  ),\n\n  Description: cx(\n    `${prefixCls}-briefHeader-description`,\n    css`\n      color: ${token.colorTextDescription};\n      font-weight: 500;\n      font-size: 1.2rem;\n      margin-block-end: 0.4rem;\n\n      span {\n        color: ${token.colorPrimary};\n        font-family: Prisma;\n        font-size: 1.4rem;\n        margin-inline-end: 0.2rem;\n      }\n    `\n  ),\n\n  title: cx(\n    `${prefixCls}-briefHeader-title`,\n    css`\n      line-height: 1.2;\n      font-weight: 700;\n      font-size: 2rem;\n      letter-spacing: 0.1rem;\n      margin: 0 !important;\n\n      ${r({\n        tablet: css`\n          font-size: 1.9rem;\n        `,\n        mobile: css`\n          font-size: 1.8rem;\n        `,\n      })}\n    `\n  ),\n  greeting: cx(\n    `${prefixCls}-briefHeader-greeting`,\n    css`\n      font-family: Pacifico;\n      font-weight: normal;\n      letter-spacing: 0.15rem;\n      font-size: 2.2rem;\n      line-height: 1.2;\n      letter-spacing: 0.3rem;\n      margin: 0 !important;\n\n      ${r({\n        tablet: css`\n          font-size: 1.9rem;\n        `,\n        mobile: css`\n          font-size: 1.8rem;\n        `,\n      })}\n    `\n  ),\n\n  highlightText: cx(\n    `${prefixCls}-briefHeader-highlightText`,\n    css`\n      color: ${token.colorPrimaryBorderHover};\n    `\n  ),\n}))\n","import React from 'react'\nimport { useStyles } from './style'\n\n/**\n * @description 简介\n */\n\ninterface BriefHeaderProps {\n  title?: string\n  greeting?: string\n  highlight?: number\n  description?: string\n  children?: React.ReactNode\n}\n\nconst BriefHeader: React.FC<BriefHeaderProps> = ({ title, greeting, highlight, description, children }) => {\n  const { styles } = useStyles()\n\n  return (\n    <div className={styles.briefHeader}>\n      {description && (\n        <div className={styles.Description}>\n          {highlight && <span>{highlight}</span>}\n          {description}\n        </div>\n      )}\n      {greeting && <div className={styles.greeting}>{greeting}</div>}\n      {title && <div className={styles.title}>{title}</div>}\n      {children && children}\n    </div>\n  )\n}\n\nexport default BriefHeader\n","import gatsbyConfig from '@/../gatsby-config'\nimport { Languages } from '@/utils/code'\n\ntype SVGIconProps = {\n  id: Languages\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\n/**\n * Using a SVG sprite for performance reasons\n */\nconst SVGIcon = ({ id, ...props }: SVGIconProps) => (\n  <svg aria-hidden focusable=\"false\" {...props}>\n    <use href={`${gatsbyConfig.pathPrefix}/svg/languages.svg#${id}`} />\n  </svg>\n)\nexport default SVGIcon\n","import { createStyles } from 'antd-style'\n\nexport const useStyles = createStyles(({ css, stylish, responsive: r, cx, prefixCls }) => ({\n  heading: cx(\n    `${prefixCls}-heading`,\n    css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      border: 0;\n      padding: 0;\n    `\n  ),\n\n  title: cx(\n    `${prefixCls}-heading-title`,\n    css`\n      &.${prefixCls}-typography {\n        margin: 0 !important;\n\n        ${r({\n          tablet: css`\n            font-size: 18px;\n          `,\n          mobile: css`\n            font-size: 16px;\n          `,\n        })}\n      }\n    `\n  ),\n\n  link: cx(\n    `${prefixCls}-heading-link`,\n    css`\n      ${stylish.tagLink}\n\n      font-size: 0.8rem;\n    `\n  ),\n}))\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Typography } from 'antd'\nimport { useStyles } from './style'\n\n/**\n * @description 标题\n */\n\ninterface HeadingProps {\n  title: string\n  description?: string\n  slug?: string\n}\n\nconst Heading: React.FC<HeadingProps> = ({ title, slug }) => {\n  const { styles } = useStyles()\n\n  return (\n    <div className={styles.heading}>\n      <Typography.Title level={4} className={styles.title}>\n        {title}\n      </Typography.Title>\n      {slug && (\n        <Link className={styles.link} to={slug}>\n          View all\n        </Link>\n      )}\n    </div>\n  )\n}\n\nexport default Heading\n","import { createStyles } from 'antd-style'\n\nexport const useStyles = createStyles(({ css, stylish, cx, responsive: r, token, prefixCls }) => ({\n  container: cx(\n    `${prefixCls}-home`,\n    css`\n      ${stylish.container}\n    `\n  ),\n\n  briefDescription: css`\n    -webkit-font-smoothing: antialiased;\n    margin-block-start: 2rem;\n    margin-block-end: 0;\n    font-size: 1rem;\n    line-height: 1.4;\n    color: ${token.colorTextSecondary};\n\n    ${r({\n      tablet: css`\n        font-size: 0.9rem;\n        margin-block-start: 2rem;\n      `,\n    })}\n  `,\n\n  preview: cx(\n    `${prefixCls}-home-preview`,\n    css`\n      display: grid;\n      grid-template-columns: repeat(3, 1fr);\n      gap: 2.4rem;\n\n      ${r({\n        tablet: css`\n          grid-template-columns: repeat(2, 1fr);\n          gap: 1.9rem;\n        `,\n      })}\n\n      ${r({\n        mobile: css`\n          grid-template-columns: repeat(1, 1fr);\n          gap: 1.4rem;\n        `,\n      })}\n    `\n  ),\n\n  recentCard: cx(\n    `${prefixCls}-recentCard`,\n    css`\n      min-height: 9rem;\n      background-color: ${token.colorBgElevated};\n      box-shadow: none !important;\n\n      .${prefixCls}-card-body {\n        display: flex;\n        flex-wrap: wrap;\n        height: 100%;\n      }\n    `\n  ),\n\n  highlightCard: cx(\n    `${prefixCls}-highlightCard`,\n    css`\n      min-height: 9rem;\n      background-color: ${token.colorBgElevated};\n      box-shadow: none !important;\n\n      .${prefixCls}-card-body {\n        display: flex;\n        align-items: center;\n        height: 100%;\n      }\n\n      .content {\n        display: flex;\n        flex-wrap: wrap;\n        align-content: space-evenly;\n        height: 100%;\n        margin-inline-start: 1.2rem;\n      }\n    `\n  ),\n\n  time: cx(\n    `${prefixCls}-card-time`,\n    css`\n      display: block;\n      color: ${token['magenta-4']};\n      font-size: 0.75rem;\n\n      ${r({\n        tablet: css`\n          font-size: 0.7rem;\n        `,\n      })}\n    `\n  ),\n\n  titleLink: cx(\n    `${prefixCls}-card-titleLink`,\n    css`\n      display: flex;\n      align-items: center;\n      width: 100%;\n      font-size: 0.95rem;\n      line-height: 1.2;\n      color: ${token.colorText};\n      font-weight: 600;\n      padding: 0;\n      border: 0;\n      text-decoration: none;\n\n      &:hover {\n        text-decoration: underline;\n        color: ${token.colorText};\n      }\n\n      ${r({\n        tablet: css`\n          font-size: 0.85rem;\n        `,\n      })}\n    `\n  ),\n\n  tagLinks: cx(\n    `${prefixCls}-card-tagLinks`,\n    css`\n      display: flex;\n      align-items: flex-end;\n\n      a {\n        font-size: 0.75rem;\n        color: ${token.colorTextDescription};\n        &:hover {\n          text-decoration: underline;\n          color: ${token.colorText};\n        }\n\n        ${r({\n          tablet: css`\n            font-size: 0.7rem;\n          `,\n        })}\n      }\n    `\n  ),\n}))\n","import { Card, Space } from 'antd'\nimport type { HeadFC, PageProps } from 'gatsby'\nimport { Link, graphql } from 'gatsby'\nimport { useMemo } from 'react'\n\nimport { useSiteMetadata } from '@/hooks'\nimport BriefHeader from '@/components/BriefHeader'\nimport Heading from '@/components/Heading'\nimport SEO from '@/components/SEO'\nimport SVGIcon from '@/components/SvgIcon'\nimport { simplifiedQueryData } from '@/utils/helpers'\nimport { useStyles } from './styles/_index.style'\n\n/**\n * @description 首页\n * @date 23/10/2022\n * @export\n * @return {*}\n */\nconst Home: React.FC<PageProps<allMdxNodesQuery<'latest' | 'Highlights'> & MdxNodesQuery>> = ({ data }) => {\n  const { styles } = useStyles()\n  const site = useSiteMetadata()\n\n  const latest = data.latest.nodes\n  const Highlights = data.Highlights.nodes\n\n  const simplifiedLatest = useMemo(() => simplifiedQueryData(latest), [data])\n  const simplifiedHighlights = useMemo(() => simplifiedQueryData(Highlights), [data])\n\n  return (\n    <Space className={styles.container} direction=\"vertical\" size=\"large\">\n      <BriefHeader greeting={`Hey, I'm ${site.author}`}>\n        <p className={styles.briefDescription}>\n          𝑰 𝒉𝒐𝒑𝒆 𝒚𝒐𝒖 𝒍𝒊𝒗𝒆 𝒂 𝒍𝒊𝒇𝒆 𝒚𝒐𝒖‘𝒓𝒆 𝒑𝒓𝒐𝒖𝒅 𝒐𝒇. 𝑰𝒇 𝒚𝒐𝒖 𝒇𝒊𝒏𝒅 𝒕𝒉𝒂𝒕 𝒚𝒐𝒖’𝒓𝒆 𝒏𝒐𝒕, 𝑰 𝒉𝒐𝒑𝒆 𝒚𝒐𝒖 𝒉𝒂𝒗𝒆 𝒕𝒉𝒆 𝒔𝒕𝒓𝒆𝒏𝒈𝒕𝒉 𝒕𝒐 𝒔𝒕𝒂𝒓𝒕 𝒂𝒍𝒍\n          𝒐𝒗𝒆𝒓 𝒂𝒈𝒂𝒊𝒏.\n        </p>\n        <p className={styles.briefDescription}>\n          我希望你过着自己引以为傲的生活。 如果你发现事实并非如此，我希望你有勇气重新开始。\n        </p>\n        <p className={styles.briefDescription}>𝑯𝒂𝒗𝒆 𝒂 𝒈𝒐𝒐𝒅 𝒅𝒂𝒚... </p>\n      </BriefHeader>\n      <Heading title=\"最近内容\" slug=\"/archive\" />\n      <div className={styles.preview}>\n        {simplifiedLatest.map((item) => {\n          return (\n            <Card className={styles.recentCard} key={item.slug} bordered={false}>\n              <time className={styles.time}>{item.date}</time>\n              <Link className={styles.titleLink} to={item.slug}>\n                {item.title}\n              </Link>\n              <div className={styles.tagLinks}>\n                {item.categories &&\n                  item.categories\n                    .filter((cat) => cat !== 'Highlight')\n                    .map((cat) => {\n                      return (\n                        <Link to={`/categories/${cat}`} key={`cat-${cat}`}>\n                          {cat}\n                        </Link>\n                      )\n                    })}\n              </div>\n            </Card>\n          )\n        })}\n      </div>\n\n      {/* 查找目录下带有 Highlight 的markdown文件 */}\n      {simplifiedHighlights.length > 0 && (\n        <>\n          <Heading title=\"热门内容\" />\n\n          <div className={styles.preview}>\n            {simplifiedHighlights.map((item) => {\n              return (\n                <Card className={styles.highlightCard} key={`Highlight-${item.slug}`} bordered={false}>\n                  <SVGIcon id={item.icon} width=\"5em\" height=\"5em\"></SVGIcon>\n                  <div className=\"content\">\n                    <time className={styles.time}>{item.date}</time>\n                    <Link className={styles.titleLink} to={item.slug}>\n                      {item.title}\n                    </Link>\n                  </div>\n                </Card>\n              )\n            })}\n          </div>\n        </>\n      )}\n    </Space>\n  )\n}\n\nexport default Home\n\nexport const Head: HeadFC = (props) => {\n  const { location } = props\n\n  return (\n    <>\n      <SEO pathName={location.pathname}></SEO>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    latest: allMdx(\n      limit: 6\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { template: { eq: \"article\" } } }\n    ) {\n      nodes {\n        ...FrontmatterFragment\n      }\n    }\n    Highlights: allMdx(\n      limit: 6\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { categories: { eq: \"Highlight\" } } }\n    ) {\n      nodes {\n        ...FrontmatterFragment\n      }\n    }\n\n    mdx {\n      ...FrontmatterFragment\n    }\n  }\n`\n","type ResponseData<T> = T & SimplifiedQueryData\n\n// 定义函数类型\ntype SimplifiedQueryDataFunction = {\n  <T>(\n    nodes: ReadonlyArray<T extends null ? GraphqlNode : T>,\n    callback?: (e: ResponseData<T>) => ResponseData<T>\n  ): ResponseData<T>[]\n}\n\n// 定义泛型函数\nexport const simplifiedQueryData: SimplifiedQueryDataFunction = (nodes, callback) => {\n  if (!nodes) return []\n  const result = nodes\n    .map((node) => {\n      const { frontmatter } = node as any\n\n      const newNode = {\n        ...node,\n        ...frontmatter,\n      }\n\n      if (callback) {\n        return callback(newNode)\n      }\n\n      return newNode\n    })\n    .filter((e) => e !== null)\n  return result\n}\n"],"names":["useStyles","createStyles","_ref","css","stylish","cx","responsive","r","token","prefixCls","briefHeader","_templateObject","_taggedTemplateLiteralLoose","mobile","_templateObject2","Description","_templateObject3","colorTextDescription","colorPrimary","title","_templateObject4","tablet","_templateObject5","_templateObject6","greeting","_templateObject7","_templateObject8","_templateObject9","highlightText","_templateObject10","colorPrimaryBorderHover","highlight","description","children","styles","_jsxs","className","_jsx","id","props","focusable","href","gatsbyConfig","pathPrefix","heading","link","tagLink","slug","Typography","Title","level","Link","to","container","briefDescription","colorTextSecondary","preview","recentCard","colorBgElevated","highlightCard","time","titleLink","_templateObject11","colorText","_templateObject12","tagLinks","_templateObject13","_templateObject14","data","site","useSiteMetadata","latest","nodes","Highlights","simplifiedLatest","useMemo","simplifiedQueryData","simplifiedHighlights","Space","direction","size","BriefHeader","author","Heading","map","item","Card","bordered","date","categories","filter","cat","length","_Fragment","SVGIcon","icon","width","height","Head","location","SEO","pathName","pathname","callback","node","frontmatter","newNode","e"],"sourceRoot":""}