{"version":3,"file":"component---src-templates-category-tsx-827fb1689c0ccf65493b.js","mappings":"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","sources":["webpack://blog-example/./src/components/ArticleList/style.ts","webpack://blog-example/./src/components/ArticleList/index.tsx","webpack://blog-example/./src/components/BriefHeader/style.ts","webpack://blog-example/./src/components/BriefHeader/index.tsx","webpack://blog-example/./src/components/Sidebar/ArchiveSidebar.tsx","webpack://blog-example/./src/components/SvgIcon/index.tsx","webpack://blog-example/./src/templates/category.tsx","webpack://blog-example/./src/templates/styles/style.ts","webpack://blog-example/./src/utils/helpers.ts"],"sourcesContent":["import { createStyles } from 'antd-style'\n\nexport const useStyles = createStyles(({ css, responsive: r, token }) => ({\n  years: css`\n    margin-block-end: 3rem;\n  `,\n  year: css`\n    color: ${token.colorPrimary};\n    padding-block-end: 0.8rem;\n    border-block-end: 2px solid ${token.colorBorderSecondary};\n    font-size: 1.8rem;\n    opacity: 0.8;\n    font-weight: bold;\n    ${r({\n      mobile: css`\n        font-size: 1.5rem;\n      `,\n    })}\n  `,\n\n  link: css`\n    display: flex;\n    align-items: center;\n    padding-block: 0.3rem;\n    margin-block: 1.6rem;\n    background-color: transparent;\n    transition: all ${token.motionDurationSlow};\n    color: inherit;\n\n    &:hover {\n      transform: translate3d(0.85rem, 0px, 0px);\n      .infos {\n        opacity: 1;\n      }\n    }\n\n    .infos {\n      flex: 1;\n      padding-inline: 1.3rem;\n      color: ${token.colorText};\n      opacity: 0.7;\n      transition: opacity ${token.motionDurationMid};\n    }\n    h5 {\n      flex: 1;\n      margin: 0;\n      font-size: 0.95rem;\n      font-weight: 600;\n      line-height: 1.5;\n      color: inherit;\n\n      ${r({\n        tablet: css`\n          font-size: 0.85rem;\n        `,\n      })}\n    }\n\n    time {\n      display: block;\n      margin-inline-start: auto;\n      color: inherit;\n      font-size: 0.8rem;\n      font-weight: 500;\n    }\n  `,\n}))\n","import React, { useMemo } from 'react'\nimport { Link } from 'gatsby'\nimport SVGIcon from '@/components/SvgIcon'\n\nimport { useStyles } from './style'\n\ninterface ArticleListProps {\n  data: Frontmatter[]\n}\n\n/**\n * @description 文章列表\n */\nconst ArticleList: React.FC<ArticleListProps> = ({ data }) => {\n  const { styles } = useStyles()\n  const articleByYear = useMemo(() => {\n    const collection: YearListData = {}\n\n    data.forEach((item) => {\n      const year = item.date?.split(', ')[1]\n\n      collection[year] = [...(collection[year] || []), item]\n    })\n\n    return collection\n  }, [data])\n\n  const years = useMemo(() => Object.keys(articleByYear).reverse(), [articleByYear])\n\n  return (\n    <>\n      {years.map((year) => (\n        <div className={styles.years} key={year}>\n          <div className={styles.year}>{year}</div>\n          {articleByYear[year].map((node) => (\n            <Link className={styles.link} to={`/${node.slug}`} key={node.slug}>\n              <SVGIcon id={node.icon} width=\"3.2em\" height=\"3.2em\"></SVGIcon>\n              <div className=\"infos\">\n                <h5>{node.title}</h5>\n                <time>{node.date}</time>\n              </div>\n              <SVGIcon id=\"arrow-right\" height=\"1.25em\" width=\"1.25em\" />\n            </Link>\n          ))}\n        </div>\n      ))}\n    </>\n  )\n}\n\nexport default ArticleList\n","import { createStyles } from 'antd-style'\n\nexport const useStyles = createStyles(({ css, stylish, cx, responsive: r, token, prefixCls }) => ({\n  briefHeader: cx(\n    `${prefixCls}-briefHeader`,\n    css`\n      position: relative;\n      width: 100%;\n      padding-block: 4rem 3rem;\n\n      ${r({\n        mobile: css`\n          padding-block: 3rem 2.5rem;\n        `,\n      })}\n    `\n  ),\n\n  Description: cx(\n    `${prefixCls}-briefHeader-description`,\n    css`\n      color: ${token.colorTextDescription};\n      font-weight: 500;\n      font-size: 1.2rem;\n      margin-block-end: 0.4rem;\n\n      span {\n        color: ${token.colorPrimary};\n        font-family: Prisma;\n        font-size: 1.4rem;\n        margin-inline-end: 0.2rem;\n      }\n    `\n  ),\n\n  title: cx(\n    `${prefixCls}-briefHeader-title`,\n    css`\n      line-height: 1.2;\n      font-weight: 700;\n      font-size: 2rem;\n      letter-spacing: 0.1rem;\n      margin: 0 !important;\n\n      ${r({\n        tablet: css`\n          font-size: 1.9rem;\n        `,\n        mobile: css`\n          font-size: 1.8rem;\n        `,\n      })}\n    `\n  ),\n  greeting: cx(\n    `${prefixCls}-briefHeader-greeting`,\n    css`\n      font-family: Pacifico;\n      font-weight: normal;\n      letter-spacing: 0.15rem;\n      font-size: 2.2rem;\n      line-height: 1.2;\n      letter-spacing: 0.3rem;\n      margin: 0 !important;\n\n      ${r({\n        tablet: css`\n          font-size: 1.9rem;\n        `,\n        mobile: css`\n          font-size: 1.8rem;\n        `,\n      })}\n    `\n  ),\n\n  highlightText: cx(\n    `${prefixCls}-briefHeader-highlightText`,\n    css`\n      color: ${token.colorPrimaryBorderHover};\n    `\n  ),\n}))\n","import React from 'react'\nimport { useStyles } from './style'\n\n/**\n * @description 简介\n */\n\ninterface BriefHeaderProps {\n  title?: string\n  greeting?: string\n  highlight?: number\n  description?: string\n  children?: React.ReactNode\n}\n\nconst BriefHeader: React.FC<BriefHeaderProps> = ({ title, greeting, highlight, description, children }) => {\n  const { styles } = useStyles()\n\n  return (\n    <div className={styles.briefHeader}>\n      {description && (\n        <div className={styles.Description}>\n          {highlight && <span>{highlight}</span>}\n          {description}\n        </div>\n      )}\n      {greeting && <div className={styles.greeting}>{greeting}</div>}\n      {title && <div className={styles.title}>{title}</div>}\n      {children && children}\n    </div>\n  )\n}\n\nexport default BriefHeader\n","import { Card } from 'antd'\r\nimport { useStyles } from './style'\r\n\r\nimport Sticky from '../Sticky'\r\nimport MenuBar from '../MenuBar'\r\nimport { useGetTaxonomies } from '@/hooks'\r\n\r\n/**\r\n * @description 归档页面 - 侧边类别、标签信息\r\n */\r\n\r\nconst ArchiveSidebar = () => {\r\n  const { styles } = useStyles()\r\n\r\n  const { tags, categories } = useGetTaxonomies()\r\n\r\n  return (\r\n    <Sticky>\r\n      <Card bordered={false} className={styles.card}>\r\n        <MenuBar>\r\n          <MenuBar.Title>类别</MenuBar.Title>\r\n          {categories.map((c) => (\r\n            <MenuBar.Link marker={false} key={c.path} to={c.path} extra={c.totalCount}>\r\n              {c.name}\r\n            </MenuBar.Link>\r\n          ))}\r\n        </MenuBar>\r\n      </Card>\r\n      <Card bordered={false} className={styles.card}>\r\n        <MenuBar>\r\n          <MenuBar.Title>标签</MenuBar.Title>\r\n          {tags.map((t) => (\r\n            <MenuBar.Tag key={t.path} to={t.path}>\r\n              {t.name}\r\n            </MenuBar.Tag>\r\n          ))}\r\n        </MenuBar>\r\n      </Card>\r\n    </Sticky>\r\n  )\r\n}\r\n\r\nexport default ArchiveSidebar\r\n","import gatsbyConfig from '@/../gatsby-config'\n\nexport type SVGIconTypes =\n  | 'cli'\n  | 'discord'\n  | 'elitepvpers'\n  | 'gatsby'\n  | 'general'\n  | 'javascript'\n  | 'mdx'\n  | 'python'\n  | 'react'\n  | 'typescript'\n  | 'pause'\n  | 'play'\n  | 'close'\n  | 'check'\n  | 'info'\n  | 'warning'\n  | 'lightbulb'\n  | 'star'\n  | 'arrow-right'\n  | 'share'\n  | 'moon'\n  | 'sun'\n  | 'computer'\n  | 'refresh'\n  | 'export'\n  | 'backward'\n  | 'download'\n  | 'rust'\n  | 'grid'\n  | 'list'\n  | 'masonry'\n\ntype SVGIconProps = {\n  id: SVGIconTypes\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\n/**\n * Using a SVG sprite for performance reasons\n */\nconst SVGIcon = ({ id, ...props }: SVGIconProps) => (\n  <svg aria-hidden focusable=\"false\" {...props}>\n    <use href={`${gatsbyConfig.pathPrefix}/svg/icons.svg#${id}`} />\n  </svg>\n)\nexport default SVGIcon\n","import type { HeadFC, PageProps } from 'gatsby'\nimport { graphql } from 'gatsby'\nimport React, { useMemo } from 'react'\n\nimport ArticleList from '@/components/ArticleList'\nimport BriefHeader from '@/components/BriefHeader'\nimport SEO from '@/components/SEO'\nimport ArchiveSidebar from '@/components/Sidebar/ArchiveSidebar'\nimport { simplifiedQueryData } from '@/utils/helpers'\nimport { useStyles } from './styles/style'\n\n/**\n * @description 类别页面\n * @date 23/10/2022\n * @export\n * @return {*}\n */\n// const CategoryTemplate: React.FC<PageProps<allMdxNodesQuery<'categories'> & MdxNodesQuery, CategoryData>> = ({ data, pageContext, }) => {\nconst CategoryTemplate: React.FC<PageProps<Queries.CategoryPageQuery, { category: string }>> = ({\n  data,\n  pageContext,\n}) => {\n  const { styles } = useStyles()\n\n  const articles = data?.categories.nodes\n  const totalCount = data?.categories.totalCount\n  const { category } = pageContext\n\n  const message = totalCount === 1 ? ' Article categorized as:' : ' Articles categorized as:'\n\n  const simplifiedArticles = useMemo(() => simplifiedQueryData(articles), [articles])\n\n  return (\n    <div className={styles.container}>\n      <div>\n        <BriefHeader highlight={totalCount} description={message} title={category} />\n        <ArticleList data={simplifiedArticles} />\n      </div>\n      <ArchiveSidebar />\n    </div>\n  )\n}\n\nexport default CategoryTemplate\n\nexport const Head: HeadFC<allMdxNodesQuery<'categories'> & MdxNodesQuery, CategoryData> = (props) => {\n  const { location, pageContext } = props\n  const { category } = pageContext\n\n  return (\n    <>\n      <SEO title={`articles tagged: ${category}`} description=\"Article categorized\" pathName={location.pathname} />\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    categories: allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { categories: { in: [$category] } } }\n    ) {\n      totalCount\n      nodes {\n        ...FrontmatterFragment\n      }\n    }\n    mdx {\n      ...FrontmatterFragment\n    }\n  }\n`\n","import { createStyles } from 'antd-style'\n\nexport const useStyles = createStyles(({ css, cx, token, stylish, responsive: r, prefixCls, iconPrefixCls }) => ({\n  container: css`\n    ${stylish.container}\n\n    display: grid;\n    grid-template-columns: auto 260px;\n    gap: 4rem;\n\n    .content {\n      & > pre:last-child {\n        margin-block-end: 0px;\n        > div {\n          margin-block-end: 0px;\n        }\n      }\n    }\n\n    ${r({\n      tablet: css`\n        display: block;\n\n        .content {\n          margin-block-end: 2rem;\n        }\n      `,\n    })}\n  `,\n\n  title: cx(\n    `${prefixCls}-article-title`,\n    css`\n      &.${prefixCls}-typography {\n        padding-block-start: 5.6rem;\n        padding-block-end: 1rem;\n        margin: 0;\n        font-weight: bold;\n        font-family: ${token.fontFamilyCode};\n\n        ${r({\n          tablet: css`\n            padding-block-start: 3.5rem;\n            padding-block-end: 3rem;\n            font-size: 23px;\n          `,\n          mobile: css`\n            font-size: 22px;\n          `,\n        })}\n      }\n    `\n  ),\n\n  description: cx(`${prefixCls}-article-description`, css``),\n\n  spacerLine: css`\n    width: 100%;\n    border-block-end: 1px dashed ${token.colorBorder};\n    margin-block: 3.2rem;\n  `,\n\n  main: cx(\n    `${prefixCls}-article-main`,\n    css`\n      padding-block-end: 5rem;\n    `\n  ),\n\n  card: cx(\n    `${prefixCls}-article-card`,\n    css`\n      ${stylish.card}\n    `\n  ),\n}))\n","type ResponseData<T> = T & SimplifiedQueryData\n\n// 定义函数类型\ntype SimplifiedQueryDataFunction = {\n  <T>(\n    nodes: ReadonlyArray<T extends null ? GraphqlNode : T>,\n    callback?: (e: ResponseData<T>) => ResponseData<T>\n  ): ResponseData<T>[]\n}\n\n// 定义泛型函数\nexport const simplifiedQueryData: SimplifiedQueryDataFunction = (nodes, callback) => {\n  if (!nodes) return []\n  const result = nodes\n    .map((node) => {\n      const { frontmatter } = node as any\n\n      const newNode = {\n        ...node,\n        ...frontmatter,\n      }\n\n      if (callback) {\n        return callback(newNode)\n      }\n\n      return newNode\n    })\n    .filter((e) => e !== null)\n  return result\n}\n"],"names":["useStyles","createStyles","_ref","css","responsive","r","token","years","_templateObject","_taggedTemplateLiteralLoose","year","_templateObject2","colorPrimary","colorBorderSecondary","mobile","_templateObject3","link","_templateObject4","motionDurationSlow","colorText","motionDurationMid","tablet","_templateObject5","data","styles","articleByYear","useMemo","collection","forEach","item","_item$date","date","split","concat","_toConsumableArray","Object","keys","reverse","_jsx","_Fragment","children","map","_jsxs","className","node","Link","to","slug","SVGIcon","id","icon","width","height","title","stylish","cx","prefixCls","briefHeader","Description","colorTextDescription","_templateObject6","greeting","_templateObject7","_templateObject8","_templateObject9","highlightText","_templateObject10","colorPrimaryBorderHover","highlight","description","ArchiveSidebar","tags","categories","useGetTaxonomies","Sticky","Card","bordered","card","MenuBar","Title","c","marker","path","extra","totalCount","name","t","Tag","props","focusable","href","gatsbyConfig","pathPrefix","pageContext","articles","nodes","category","message","simplifiedArticles","simplifiedQueryData","container","BriefHeader","ArticleList","Head","location","SEO","pathName","pathname","iconPrefixCls","fontFamilyCode","spacerLine","colorBorder","main","callback","frontmatter","newNode","filter","e"],"sourceRoot":""}